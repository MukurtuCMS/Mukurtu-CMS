services:
  php:
    # See: https://github.com/TugboatQA/dockerfiles/blob/main/php/TAGS.md
    image: tugboatqa/php:8.3-apache
    default: true
    depends: mariadb
    commands:
      init:
        # Install dependencies for PHP extensions.
        # Add poppler-utils for the pdftotext executable.
        # Add ImageMagick for creating PDF thumbnail images.
        - apt update && apt install -y libzip-dev libpng-dev libjpeg-dev libwebp-dev libfreetype6-dev poppler-utils imagemagick

        # The ImageMagick PECL extension is currently not PHP 8.3 compatible.
        # This is a temporary work-around to use the beta version of the
        # extension. Once a stable release is available, this should be able to
        # be removed.
        # See https://github.com/Imagick/imagick/issues/640
        - pecl install imagick-3.8.0RC2 --force
        - docker-php-ext-enable imagick

        # Add JPEG and FreeType support to GD.
        - docker-php-ext-configure gd --with-jpeg --with-webp --with-freetype

        # Install the PHP extensions all at once to minimize rebuilding.
        - docker-php-ext-install zip opcache gd

        # Enable Apache 'rewrite' module for clean URLs.
        - a2enmod rewrite

        # Adjust a few PHP settings. Higher memory limit is needed for install.
        - echo "upload_max_filesize=100M" >> /usr/local/etc/php/conf.d/tugboat.ini
        - echo "post_max_size=100M" >> /usr/local/etc/php/conf.d/tugboat.ini
        - echo "memory_limit=512M" >> /usr/local/etc/php/conf.d/tugboat.ini

        # Install composer.
        # See https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
        - wget https://raw.githubusercontent.com/composer/getcomposer.org/main/web/installer -O - -q | php -- --quiet
        - mv composer.phar /usr/local/bin/composer

        # Make a directory in which the Mukurtu template will be installed.
        - |
          # The home directory needs to be readable by www-data.
          chmod 755 ~
          mkdir ~/mukurtu
          cd ~/mukurtu
          composer create mukurtu/mukurtu-template:dev-main .
          # Add our own local checkout repository instead. This will use the
          # local directory as the source, copying it into the final location.
          composer config repositories.local-dev path $TUGBOAT_ROOT
          composer update --no-install
          composer install --no-ansi --no-interaction --optimize-autoloader --no-progress

        # Symlink the web root and grant read access to the home directory.
        - ln -snf ~/mukurtu/web $DOCROOT

      update:
        # Set appropriate file permissions/ownership for the files directory.
        - |
          cd ~/mukurtu/web
          mkdir -p sites/default/files
          chown -R www-data:www-data sites/default/files
          find sites/default/files -type d -exec chmod 2775 {} \;
          find sites/default/files -type f -exec chmod 0664 {} \;
          cd ~/mukurtu
          mkdir -p private_files
          chown -R www-data:www-data private_files
          find private_files -type d -exec chmod 2775 {} \;
          find private_files -type f -exec chmod 0664 {} \;
      build:
        - |
          cd ~/mukurtu
          # Copy in the settings.php file to set the database connection.
          cp $TUGBOAT_ROOT/.tugboat/settings.tugboat.php web/sites/default/settings.php
          chown www-data:www-data web/sites/default/settings.php
          # Update composer dependencies.
          rm composer.lock
          composer update --no-ansi --no-interaction --optimize-autoloader --no-progress
          # Install Drupal with the Mukurtu installation profile. Run as web
          # user to create files with the right permissions. Pass in the
          # environment variables from Tugboat using the -E option.
          sudo -E -u www-data ./vendor/bin/drush site-install mukurtu -y --account-pass="admin" --site-name="Mukurtu CMS"
  mariadb:
    image: tugboatqa/mariadb:lts
    commands:
      init:
        # Increase the allowed packet size to 512MB.
        - mariadb -e "SET GLOBAL max_allowed_packet = 536870912;"
        # Ensure this packet size persists even if MySQL restarts.
        - echo "max_allowed_packet = 536870912" >> /etc/mysql/conf.d/tugboat.cnf
      build:
        # Drop and re-create the database (needed when rebuilding/reinstalling).
        - mariadb-admin -f drop tugboat && mariadb-admin create tugboat

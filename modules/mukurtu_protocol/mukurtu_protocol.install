<?php

/**
 * @file
 * Install, update and uninstall functions for the mukurtu_protocol module.
 */

use Drupal\og\Og;
use Drupal\og\Entity\OgRole;
use Drupal\og\OgGroupAudienceHelperInterface;

/**
 * Implements hook_schema().
 */
function mukurtu_protocol_schema() {
  $schema['mukurtu_protocol_map'] = [
    'description' => 'Mukurtu Protocol Map',
    'fields' => [
      'protocol_set_id' => [
        'description' => 'The ID of the protocol set.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'protocol_set' => [
        'description' => 'The set of protocols',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ],
    ],
    'primary key' => [
      'protocol_set_id',
    ],
  ];

  $schema['mukurtu_protocol_access'] = [
    'description' => 'Mukurtu Protocol Access System',
    'fields' => [
      'id' => [
        'description' => 'The ID of the entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'entity_type_id' => [
        'description' => 'The entity type ID.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'en',
      ],
      'langcode' => [
        'description' => 'The language.langcode of this entity.',
        'type' => 'varchar_ascii',
        'length' => 12,
        'not null' => TRUE,
        'default' => 'en',
      ],
      'protocol_set_id' => [
        'description' => 'The ID of the protocol set',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'grant_view' => [
        'description' => 'Boolean indicating whether a user with the protocol set can view this entity.',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'grant_update' => [
        'description' => 'Boolean indicating whether a user with the protocol set can update this entity.',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'grant_delete' => [
        'description' => 'Boolean indicating whether a user with the protocol set can delete this entity.',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_install().
 */
function mukurtu_protocol_install() {
  $groupTypes = ['community', 'protocol'];

  foreach ($groupTypes as $groupType) {
    Og::addGroup($groupType, $groupType);

    // Delete the default 'administrator' role.
    $role = OgRole::getRole($groupType, $groupType, 'administrator');
    if ($role) {
      $role->delete();
    }
  }

  // Enable community/protocol types for pathauto.
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('pathauto.settings');
  $types = $config->get('enabled_entity_types');
  $types[] = 'community';
  $types[] = 'protocol';
  $config->set('enabled_entity_types', $types);
  $config->save();
}

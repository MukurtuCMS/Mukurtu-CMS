<?php

use Drupal\Core\Entity\FieldableEntityInterface;
use \Drupal\Core\Entity\EntityInterface;
use Drupal\mukurtu_protocol\Entity\ProtocolControl;
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Provide Mukurtu Protocols (access control).
 */

 /**
  * Implements hook_entity_create().
  */
function mukurtu_protocol_entity_create(EntityInterface $entity) {
  if ($entity instanceof FieldableEntityInterface) {
    if ($entity->hasField('field_protocol_control')) {
      // For brand new protocol controlled entities,
      // instantiate a new protocol control entity.
      $name = "{$entity->getEntityTypeId()}:{$entity->uuid()}";
      $pcEntity = ProtocolControl::create([
        'name' => $name,
        'field_sharing_setting' => 'all',
      ]);
      $pcEntity->save();
      $entity->set('field_protocol_control', $pcEntity->id());
    }
  }
}

 /**
  * Implements hook_entity_insert().
  */
function mukurtu_protocol_entity_insert(EntityInterface $entity) {
  if ($entity instanceof FieldableEntityInterface) {
    if ($entity->hasField('field_protocol_control')) {
/*       $query = \Drupal::entityQuery('protocol_control')
        ->condition('field_child_collections', $this->id(), '=')
        ->accessCheck(FALSE);
      $results = $query->execute();

      // Not in use at all.
      if (count($results) > 0) {
        return TRUE;
      } */
    }
  }
}

 /**
  * Implements hook_entity_presave().
  */
function mukurtu_protocol_entity_presave(EntityInterface $entity) {
  if ($entity instanceof FieldableEntityInterface) {
    if ($entity->hasField('field_protocol_control')) {
      ///dpm("presave");
      //dpm($entity->get('field_protocol_control')->getValue());
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function mukurtu_protocol_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!empty($form['field_protocol_control'])) {
    $form['actions']['submit']['#submit'] = array_merge([['\Drupal\mukurtu_protocol\Plugin\Field\FieldWidget\ProtocolControlWidget', 'customSubmit']], $form['actions']['submit']['#submit']);
  }
}

/**
 * Implements hook_entity_type_build().
 */
function mukurtu_protocol_entity_type_build(array &$entity_types) {
  // This is where we attach the Mukurtu protocol access handlers.
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types['node']->setHandlerClass('access', 'Drupal\mukurtu_protocol\MukurtuProtocolNodeAccessControlHandler');
  //$entity_types['media']->setHandlerClass('access', 'Drupal\mukurtu_protocol\MukurtuProtocolAccessControlHandler');
}

<?php

use Drupal\views\ViewExecutable;
use Drupal\field\Entity\FieldConfig;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Component\Serialization\Json;
use Drupal\mukurtu_browse\Plugin\views\argument\MukurtuBoundingBox;

/**
 * Implements hook_theme().
 */
function mukurtu_browse_theme($existing, $type, $theme, $path) {
  return [
    'mukurtu_browse' => [
      'variables' => [
        'is_dh' => NULL,
        'maplink' => NULL,
        'list_results' => NULL,
        'grid_results' => NULL,
        'map_results' => NULL,
        'facets' => [],
      ],
    ],
    'mukurtu_map_browse' => [
      'variables' => [
        'is_dh' => NULL,
        'maplink' => NULL,
        'list_results' => NULL,
        'grid_results' => NULL,
        'map_results' => NULL,
        'facets' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_ajax_render_alter().
 */
function mukurtu_browse_ajax_render_alter(array &$data) {
  // On the map browse, remove the viewsScrollTop command so
  // we don't scroll on refresh.
  $view_name = 'mukurtu_browse_by_map';
  $view_display_id = 'map_block';

  if (isset($data[0]['settings']['views']['ajaxViews'])) {
    $view = reset($data[0]['settings']['views']['ajaxViews']);

    if ($view['view_name'] == $view_name && $view['view_display_id'] == $view_display_id) {
      $selector = '.js-view-dom-id-' . $view['view_dom_id'];
      foreach ($data as $key => $value) {
        if ($value['command'] === 'viewsScrollTop' && $value['selector'] === $selector) {
          unset ($data[$key]);
          break;
        }
      }
    }
  }

}

/**
 * Implements hook_views_data_alter().
 */
function mukurtu_browse_views_data_alter(array &$data) {
  if (isset($data['search_api_index_mukurtu_default_content_index'])) {
    $data['search_api_index_mukurtu_default_content_index']['mukurtu_bounding_box'] = [
      'title' => t('Mukurtu Bounding Box'),
      'argument' => [
        'title' => t('Mukurtu Bounding Box'),
        'help' => t('Bounding box query for Leaflet maps.'),
        'field' => 'field_coverage',
        'id' => 'mukurtu_bounding_box',
      ],
    ];
  }
}


/**
 * Implements hook_views_plugins_argument_alter().
 */
function mukurtu_browse_views_plugins_argument_alter(array &$plugins) {
  $plugins['mukurtu_bounding_box'] = [
    'plugin_type' => 'argument',
    'id' => 'mukurtu_bounding_box',
    'class' => MukurtuBoundingBox::class,
    'provider' => 'mukurtu_browse',
  ];
}

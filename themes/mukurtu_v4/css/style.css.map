{"version":3,"sources":["00-base/_base.scss","00-base/colors/_colors.scss","../node_modules/include-media/dist/_include-media.scss","00-base/palettes/red-bone.scss","00-base/spacing/_spacing.scss","00-base/typography/_type-settings.scss","00-base/typography/_typography.scss","01-atoms/button/_button.scss","01-atoms/link/_link.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["// Base HTML elements.\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 100%;\n  // Used for smoother scrolling by back-top.\n  scroll-behavior: smooth;\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    scroll-behavior: initial;\n  }\n\n  // Disable horizontal scrolling.\n  overflow-x: hidden;\n}\n\nbody {\n  margin: 0;\n  // color: var(--text);\n  // font-size: var(--font-size-m);\n  // font-family: var(--font-body-face);\n  // line-height: var(--line-height-base);\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  // background-color: clr(grayscale, 0);\n}\n\nul li,\nol li {\n  margin: 0;\n  // line-height: var(--line-height-base);\n}\n\nul li {\n  list-style-type: square;\n  // padding-left: var(--v-space-5xs);\n\n  &::marker {\n    // color: var(--accent-secondary);\n  }\n}\n\np {\n  // margin-top: var(--v-space-4xs);\n  // margin-bottom: var(--v-space-4xs);\n}\n\ndl,\ndt,\ndd {\n  margin: 0;\n}\n\naddress {\n  font-style: normal;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\na {\n  // color: var(--color-accent-light);\n  // text-decoration: underline solid 2px var(--color-accent);\n  text-underline-offset: 4px;\n  // transition: color $speed-normal ease-in, text-decoration-color $speed-normal ease-in;\n\n  &:hover {\n    // text-decoration-color: var(--color-transparent);\n    // transition: text-decoration-color $speed-normal ease-in;\n  }\n\n  &:hover,\n  &:focus,\n  &:focus-visible,\n  &:active {\n    // color: var(--color-black);\n  }\n\n  &:focus,\n  &:focus-visible,\n  &:active {\n    // outline: var(--color-blue-800) solid 2px;\n    // text-decoration-color: var(--color-transparent);\n  }\n\n  // Set link font on page only (skip admin toolbar).\n  .layout-container & {\n    // font-family: var(--font-display-face);\n  }\n}\n\n.clipboard-item {\n  position: relative;\n}\n\n// .visually-hidden {\n//   @include visually-hidden;\n// }\n","// Main Colors.\nh2 {\n  color: #138aab;\n}\n\n@include media(\">=lg\") {\n  h2 {\n    color: yellow;\n  }\n}\n\n:root {\n  // Core Colors.\n\n  // Overridden by Palette Switcher.\n  --brand-primary: #159ec4;\n  --brand-secondary: #e6ab49;\n  --brand-primary-accent: #138aab;\n  --brand-secondary-accent: #f1b85a;\n  --mukurtu-navbar-collapse-link-hover-color: #e5ab48;\n  --mukurtu-breadcrumb-gradient-color: #b7873a;\n  --mukurtu-panel-pane-text-color: #fff;\n  --mukurtu-panel-pane-content-background-color: #eeecec;\n  --mukurtu-mejs-background-color: var(--brand-light-accent);\n  --mukurtu-mejs-time-rail-loaded-color: #e5e1e1;\n  --mukurtu-mejs-time-rail-current-color: #d1cbcb;\n  --mukurtu-dictionary-word-label-background-color: var(--mukurtu-view-row-divider-color);\n  --mukurtu-collection-title-font-color: #fff;\n  --mukurtu-collection-pane-bg-color: var(--mukurtu-navbar-collapse-bg);\n\n  // Persistent Across Palettes Below.\n  --brand-text-color: #464646;\n  --brand-light: #e5e9e9;\n  --brand-light-accent: #f8f7f7;\n\n  --link-color: var(--brand-primary-accent);\n  --text-color: var(--brand-text-color);\n  --light-text-color: #fff;\n  --teaser-text-color: #333333;\n\n  // Footer.\n  --footer-text-color: #999999;\n  --footer-link-color: #cccccc;\n\n  // Nav.\n  --navbar-default-bg: #fff;\n  --navbar-mukurtu-bg: var(--brand-primary);\n\n  // Views.\n  --mukurtu-view-row-divider-color: #eeeaea;\n  --mukurtu-primary-field-divider-color: #e5e1e1;\n\n  // Mobile Menu/Collapse Navbar.\n  --mukurtu-navbar-collapse-bg: var(--brand-light-accent);\n  --mukurtu-navbar-collapse-link-color: var(--brand-primary-accent);\n\n  // Mukurtu Specific.\n  --mukurtu-text-box-background-color: #eeecec;\n  --mukurtu-title-accent-bar-color: var(--brand-secondary);\n  --mukurtu-left-right-title-color: #fff;\n  --mukurtu-dictionary-term-title-full-color: #fff;\n\n  // Breadcrumbs.\n  --mukurtu-breadcrumb-background-color: var(--brand-secondary);\n  --mukurtu-breadcrumb-link-color: #fff;\n  --mukurtu-breadcrumb-non-link-color: var(--text-color);\n\n  --mukurtu-default-container-bg-color: var(--brand-primary);\n  --mukurtu-default-container-bg-hover-color: var(--brand-primary-accent);\n  --mukurtu-default-container-font-color: #fff;\n\n  // Mukurtu Menu Navbar links.\n  --mukurtu-navbar-default-link-color: #fff;\n  -mukurtu-navbar-default-link-hover-color: #fff;\n  --mukurtu-navbar-default-link-hover-bg: var(--brand-primary-accent);\n\n  --mukurtu-navbar-default-link-active-color: #555;\n  --mukurtu-navbar-default-link-active-bg: darken(var(--navbar-default-bg), 6.5%);\n  --mukurtu-navbar-default-link-disabled-color: #ccc;\n  --mukurtu-navbar-default-link-disabled-bg: transparent;\n\n  // Media Element Controls.\n  --mukurtu-mejs-text-color: var(--brand-text-color);\n\n  // Dictionary.\n  --mukurtu-dictionary-facets-pane-background-color: var(--brand-primary);\n  --mukurtu-dictionary-facets-pane-contrast-color: var(--brand-secondary);\n  --mukurtu-dictionary-term-title-color: #fff;\n\n  // Collections.\n  // These values change based on the selected color palette - see these\n  // at the top of the file.\n\n  // Community.\n  --mukurtu-community-membership-status-color: var(--brand-primary);\n\n  // Browse By\n  --mukurtu-browse-by-background-color: var(--brand-primary);\n  --mukurtu-browse-by-title-color: var(--brand-secondary);\n}\n\n// See palettes folder for the different color palettes.\n// Those files are injected by Drupal so they shouldn't be bundled to style.css.\n","//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v2.0.0\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n@charset \"UTF-8\";\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:string';\n@use 'sass:meta';\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x':\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x':\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if meta.feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map.has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not list.index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if string.index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if string.length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $value: string.slice($expression, $operator-index + string.length($operator));\n\n  @if map.has-key($breakpoints, $value) {\n    $value: map.get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map.get($unit-intervals, math.unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{math.unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map.has-key($media-expressions, $expression) {\n    @return map.get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: list.length($list)) {\n  @if list.length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: list.append($result, list.nth($list, $i), comma);\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n\n@function to-number($value) {\n  @if meta.type-of($value) == 'number' {\n    @return $value;\n  } @else if meta.type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: string.slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: (\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: string.slice($value, 2);\n  }\n\n  @for $i from 1 through string.length($value) {\n    $character: string.slice($value, $i, $i);\n\n    @if not(list.index(map.keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), string.slice($value, $i));\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map.get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + math.div(map.get($numbers, $character), $digits);\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    'px': 1px,\n    'cm': 1cm,\n    'mm': 1mm,\n    '%': 1%,\n    'ch': 1ch,\n    'pc': 1pc,\n    'in': 1in,\n    'em': 1em,\n    'rem': 1rem,\n    'pt': 1pt,\n    'ex': 1ex,\n    'vw': 1vw,\n    'vh': 1vh,\n    'vmin': 1vmin,\n    'vmax': 1vmax,\n  );\n\n  @if not list.index(map.keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map.get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and list.length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and list.length($conditions) > 0) {\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",":root {\n  // Overridden by Palette Switcher.\n  --brand-primary:          #ac143a;\n  --brand-secondary:        #d9d4c2;\n  --brand-primary-accent:   #9a1134;\n  --brand-secondary-accent: #c9c2a8;\n  --mukurtu-navbar-collapse-link-hover-color:       var(--brand-secondary);\n  --mukurtu-breadcrumb-gradient-color:              #99937f;\n  --mukurtu-panel-pane-text-color:                  var(--brand-primary);\n  --mukurtu-panel-pane-content-background-color:    #f1efe9;\n  --mukurtu-mejs-background-color:                  var(--mukurtu-navbar-collapse-bg);\n  --mukurtu-mejs-time-rail-loaded-color:            #fff;\n  --mukurtu-mejs-time-rail-current-color:           var(--brand-secondary-accent);\n  --mukurtu-dictionary-word-label-background-color: var(--brand-secondary);\n  --mukurtu-collection-title-font-color:            var(--text-color);\n  --mukurtu-collection-pane-bg-color:               var(--brand-light-accent);\n}\n",":root {\n  // Vertical spacing.\n  // All vertical horizontal spacing is based on an 16px base unit system.\n  --v-space-6xs: 0.25rem; // 4px\n  --v-space-5xs: 0.5rem; // 8px\n  --v-space-4xs: 1rem; // 16px\n  --v-space-3xs: 1.5rem; // 24px\n  --v-space-2xs: 2rem; // 32px\n  --v-space-xs: 2.5rem; // 40px\n  --v-space-s: 3rem; // 48px\n  --v-space-m: 3.5rem; // 56px\n  --v-space-l: 4rem; // 64px\n  --v-space-xl: 4.5rem; // 72px\n  --v-space-2xl: 5rem; // 80px\n  --v-space-3xl: 6rem; // 96px\n  --v-space-4xl: 6.5rem; // 104px\n  --v-space-5xl: 7.5rem; // 120px\n  --v-space-6xl: 8rem; // 128px\n\n  // Top / bottom padding between components.\n  --v-separation-s: var(--v-space-3xs); // 24px\n  --v-separation-m: var(--v-space-2xs); // 32px\n  --v-separation-l: var(--v-space-s); // 48px\n  --v-separation-xl: var(--v-space-l); // 64px\n  --v-separation-xxl: var(--v-space-6xl); // 64px\n  --v-separation: var(--v-separation-s); // Dynamic responsive value.\n\n  @include media(\">=md\") {\n    --v-separation: var(--v-separation-m);\n  }\n\n  @include media(\">=lg\") {\n    --v-separation: var(--v-separation-l);\n  }\n\n  @include media(\">=xl\") {\n    --v-separation: var(--v-separation-xl);\n  }\n}\n",":root {\n  // Font sizes.\n  --font-size-2xs: 0.75rem; // 12px\n  --font-size-xs: 0.875rem; // 14px\n  --font-size-s: 1rem; // 16px\n  --font-size-m: 1.125rem; // 18px\n  --font-size-l: 1.25rem; // 20px\n  --font-size-xl: 1.5rem; // 24px\n  --font-size-2xl: 1.75rem; // 28px\n  --font-size-3xl: 2rem; // 32px\n  --font-size-heading-md: 2.25rem; // 36px\n  --font-size-heading-lg: 2.5rem; // 40px\n  --font-size-heading-xl: 3rem; // 48px\n  --font-size-heading-2xl: 3.5rem; // 56px\n  --font-size-heading-3xl: 4rem; // 64px\n  --font-size-heading-4xl: 4.5rem; // 72px\n  --font-size-heading-5xl: 7rem; // 112px\n\n  // Line heights.\n  --line-height-3xs: 0.75rem; // 12px\n  --line-height-2xs: 1rem; // 16px\n  --line-height-xs: 1.5rem; // 24px\n  --line-height-s: var(--line-height-xs); // 24px\n  --line-height-m: 2rem; // 32px\n  --line-height-l: var(--line-height-m); // 32px\n  --line-height-xl: 2.5rem; // 40px\n  --line-height-2xl: 3rem; // 48px\n  --line-height-3xl: 3.5rem; // 56px\n  --line-height-heading-2xl: 4rem; // 64px\n  --line-height-heading-3xl: 4.5rem; // 72px\n  --line-height-heading-4xl: var(--line-height-heading-3xl); // 72px\n  --line-height-heading-5xl: 7rem; // 112px\n  --line-height-base: var(--line-height-l); // (default)\n\n  // Letter spacing.\n  --letter-spacing-xs: 0.01rem; // 0.16px\n  --letter-spacing-xl: 0.02rem; // 0.32px\n  --letter-spacing-negative-xll: -0.01rem; // -0.16px\n  --letter-spacing-negative-xxl: -0.02rem; // -0.32px\n  --letter-spacing-label: 0.1rem; // 1.6px\n}\n",":root {\n  // Typography.\n  --font-body-face: Georgia,\n    \"Times New Roman\",\n    Times,\n    serif;\n  --font-display-face: \"Helvetica Neue\",\n    Helvetica,\n    Arial,\n    sans-serif;\n\n  --font-size-base: var(--font-size-small);\n}\n\n// Headings definition.\n@mixin heading-5xl {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-heading-5xl);\n  line-height: var(--line-height-heading-5xl);\n  letter-spacing: var(--letter-spacing-negative-xxl);\n  font-weight: 700;\n}\n\n@mixin heading-4xl {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-heading-4xl);\n  line-height: var(--line-height-heading-4xl);\n  letter-spacing: var(--letter-spacing-negative-xxl);\n  font-weight: 700;\n}\n\n@mixin heading-3xl {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-heading-3xl);\n  line-height: var(--line-height-heading-3xl);\n  letter-spacing: var(--letter-spacing-negative-xxl);\n  font-weight: 700;\n}\n\n@mixin heading-2xl {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-heading-2xl);\n  line-height: var(--line-height-heading-2xl);\n  letter-spacing: var(--letter-spacing-negative-xxl);\n  font-weight: 700;\n}\n\n@mixin heading-xl {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-heading-xl);\n  line-height: var(--line-height-3xl);\n  letter-spacing: var(--letter-spacing-negative-xll);\n  font-weight: 700;\n}\n\n@mixin heading-lg {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-heading-lg);\n  line-height: var(--line-height-2xl);\n  letter-spacing: var(--letter-spacing-negative-xll);\n  font-weight: 700;\n}\n\n@mixin heading-md {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-heading-md);\n  line-height: var(--line-height-xl);\n  font-weight: 700;\n}\n\n@mixin heading-sm {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-3xl);\n  line-height: var(--line-height-xl);\n  font-weight: 700;\n}\n\n@mixin heading-xs {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-xl);\n  line-height: var(--line-height-m);\n  font-weight: 700;\n}\n\n@mixin heading-2xs {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-l);\n  line-height: var(--line-height-s);\n  font-weight: 700;\n}\n\n// Body styles.\n@mixin body-3xl {\n  font-family: var(--font-body-face);\n  font-size: var(--font-size-3xl);\n  line-height: var(--line-height-3xl);\n  letter-spacing: var(--letter-spacing-negative-xxl);\n  font-weight: 400;\n}\n\n@mixin body-3xl-medium {\n  @include body-3xl;\n  font-weight: 600;\n}\n\n@mixin body-3xl-heavy {\n  @include body-3xl;\n  font-weight: 700;\n}\n\n@mixin body-2xl {\n  font-family: var(--font-body-face);\n  font-size: var(--font-size-2xl);\n  line-height: var(--line-height-2xl);\n  font-weight: 400;\n}\n\n@mixin body-2xl-medium {\n  @include body-2xl;\n  font-weight: 600;\n}\n\n@mixin body-2xl-heavy {\n  @include body-2xl;\n  font-weight: 700;\n}\n\n@mixin body-xl {\n  font-family: var(--font-body-face);\n  font-size: var(--font-size-xl);\n  line-height: var(--line-height-xl);\n  font-weight: 400;\n}\n\n@mixin body-xl-medium {\n  @include body-xl;\n  font-weight: 600;\n}\n\n@mixin body-xl-heavy {\n  @include body-xl;\n  font-weight: 700;\n}\n\n@mixin body-lg {\n  font-family: var(--font-body-face);\n  font-size: var(--font-size-l);\n  line-height: var(--line-height-l);\n  font-weight: 400;\n}\n\n@mixin body-lg-medium {\n  @include body-lg;\n  font-weight: 600;\n}\n\n@mixin body-lg-heavy {\n  @include body-lg;\n  font-weight: 700;\n}\n\n@mixin body-md {\n  font-family: var(--font-body-face);\n  font-size: var(--font-size-m);\n  line-height: var(--line-height-m);\n  font-weight: 400;\n}\n\n@mixin body-md-medium {\n  @include body-md;\n  font-weight: 600;\n}\n\n@mixin body-md-heavy {\n  @include body-md;\n  font-weight: 700;\n}\n\n@mixin body-sm {\n  font-family: var(--font-body-face);\n  font-size: var(--font-size-s);\n  line-height: var(--line-height-m);\n  font-weight: 400;\n}\n\n@mixin body-sm-medium {\n  @include body-sm;\n  font-weight: 600;\n}\n\n@mixin body-sm-heavy {\n  @include body-sm;\n  font-weight: 700;\n}\n\n@mixin body-xs {\n  font-family: var(--font-body-face);\n  font-size: var(--font-size-xs);\n  line-height: var(--line-height-xs);\n  font-weight: 400;\n}\n\n@mixin body-xs-medium {\n  @include body-xs;\n  font-weight: 600;\n}\n\n@mixin body-xs-heavy {\n  @include body-xs;\n  font-weight: 700;\n}\n\n// Labels definition.\n@mixin label-lg {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-s);\n  line-height: var(--line-height-s);\n  letter-spacing: var(--letter-spacing-label);\n  font-weight: 600;\n  text-transform: uppercase;\n}\n\n@mixin label-md {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-xs);\n  line-height: var(--line-height-2xs);\n  letter-spacing: var(--letter-spacing-label);\n  font-weight: 600;\n  text-transform: uppercase;\n}\n\n@mixin label-sm {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-2xs);\n  line-height: var(--line-height-2xs);\n  letter-spacing: var(--letter-spacing-label);\n  font-weight: 600;\n  text-transform: uppercase;\n}\n\n// Other/utility styles.\n@mixin info-xl {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-xl);\n  line-height: var(--line-height-l);\n  font-weight: 400;\n}\n\n@mixin info-xl-medium {\n  @include info-xl;\n  font-weight: 600;\n}\n\n@mixin info-xl-heavy {\n  @include info-xl;\n  font-weight: 700;\n}\n\n@mixin info-lg {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-l);\n  line-height: var(--line-height-s);\n  font-weight: 400;\n}\n\n@mixin info-lg-medium {\n  @include info-lg;\n  font-weight: 600;\n}\n\n@mixin info-lg-heavy {\n  @include info-lg;\n  font-weight: 700;\n}\n\n@mixin info-md {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-m);\n  line-height: var(--line-height-s);\n  font-weight: 400;\n}\n\n@mixin info-md-medium {\n  @include info-md;\n  font-weight: 600;\n}\n\n@mixin info-md-heavy {\n  @include info-md;\n  font-weight: 700;\n}\n\n@mixin info-sm {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-s);\n  line-height: var(--line-height-s);\n  font-weight: 400;\n}\n\n@mixin info-sm-medium {\n  @include info-sm;\n  font-weight: 600;\n}\n\n@mixin info-sm-heavy {\n  @include info-sm;\n  font-weight: 700;\n}\n\n@mixin info-xs {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-xs);\n  line-height: var(--line-height-2xs);\n  font-weight: 400;\n}\n\n@mixin info-xs-medium {\n  @include info-xs;\n  font-weight: 600;\n}\n\n@mixin info-xs-heavy {\n  @include info-xs;\n  font-weight: 700;\n}\n\n@mixin info-2xs {\n  font-family: var(--font-display-face);\n  font-size: var(--font-size-2xs);\n  line-height: var(--line-height-3xs);\n  font-weight: 400;\n}\n\n@mixin info-2xs-medium {\n  @include info-2xs;\n  font-weight: 600;\n}\n\n@mixin info-2xs-heavy {\n  @include info-2xs;\n  letter-spacing: var(--letter-spacing-xs);\n  font-weight: 700;\n}\n\n// Heading assignments.\n// Classes allow styling using other heading classes (ex: <h2 class=\"h3\">).\nh1,\n.h1 {\n  font-family: var(--font-display-face);\n  @include heading-sm;\n\n  a {\n    &:hover {\n      text-decoration-line: underline;\n      text-decoration-color: var(--link-color);\n    }\n\n    &:focus,\n    &:focus-visible {\n      // border: 2px solid var(--color-focus);\n    }\n  }\n\n  @include media('>=md') {\n    @include heading-lg;\n  }\n}\n\nh2,\n.h2 {\n  font-family: var(--font-display-face);\n  @include heading-xs;\n\n  a {\n    &:hover {\n      text-decoration-line: underline;\n      text-decoration-color: var(--link-color);\n    }\n\n    &:focus,\n    &:focus-visible {\n      // border: 2px solid var(--color-focus);\n    }\n  }\n\n  @include media('>=md') {\n    @include heading-md;\n  }\n}\n\nh3,\n.h3 {\n  font-family: var(--font-display-face);\n  @include heading-2xs;\n  margin: 0;\n\n  a {\n    &:hover {\n      text-decoration-line: underline;\n      text-decoration-color: var(--link-color);\n    }\n\n    &:focus,\n    &:focus-visible {\n      // border: 2px solid var(--color-focus);\n    }\n  }\n\n  @include media('>=md') {\n    @include heading-sm;\n  }\n}\n\nh4,\n.h4 {\n  font-family: var(--font-display-face);\n  @include info-md-heavy;\n\n  a {\n      text-decoration-line: underline;\n      text-decoration-color: var(--link-color);\n    }\n\n    &:focus,\n    &:focus-visible {\n      // border: 2px solid var(--color-focus);\n    }\n\n  @include media('>=md') {\n    @include heading-xs;\n  }\n}\n\nh5,\n.h5 h6 .h6 {\n  font-family: var(--font-display-face);\n  @include heading-2xs;\n\n  a {\n    &:hover {\n      text-decoration-line: underline;\n      text-decoration-color: var(--link-color);\n    }\n\n    &:focus,\n    &:focus-visible {\n      // border: 2px solid var(--color-focus);\n    }\n  }\n}\n","// Defaults.\nbutton,\ninput[type=button],\ninput[type=submit],\ninput[type=reset] {\n  @include info-md-heavy;\n  color: var(--light-text-color);\n  background: var(--brand-primary);\n  border: 0;\n  padding: var(--v-space-4xs) var(--v-space-2xs);\n\n  &:hover,\n  &:active {\n    color: var(--light-text-color);\n    background: var(--brand-primary-accent);\n  }\n\n  &:focus {\n    // outline: 2px solid var(--color-focus);\n  }\n\n  &:disabled {\n    color: var(--light-text-color);\n    background: var(--brand-text-color);\n  }\n}\n","// @todo: this is for testing\na.testing-links {\n font-size: 20px;\n color: red;\n}\n\na {\n  color: var(--brand-primary-accent);\n\n  &:hover {\n    box-shadow: 0 -2px 0 0 var(--brand-primary-accent) inset;\n  }\n}\n"]}
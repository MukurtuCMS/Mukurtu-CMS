{"version":3,"sources":["style.scss","00-base/defaults/_mixins.scss","00-base/base/_base.scss","00-base/breakpoints/_breakpoints.scss","00-base/colors/_colors.scss","00-base/layout/_layout.scss","../node_modules/include-media/dist/_include-media.scss","00-base/palettes-demo/palettes-demo.scss","00-base/palettes/blue-gold.scss","00-base/palettes/red-bone.scss","00-base/spacing/_spacing.scss","00-base/typography/_fonts.scss","00-base/typography/_type-settings.scss","00-base/typography/_typography.scss","01-atoms/button/_button.scss","01-atoms/images/_logo.scss","02-molecules/breadcrumb/_breadcrumb.scss","02-molecules/menus/_menu.scss","03-organisms/header/_header.scss","04-templates/dashboard/_dashboard.scss","04-templates/page/_page.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["// External Libraries.\n\n/*! See https://eduardoboucas.github.io/include-media/ for detailed\ndocumentation on how to use @include media(). */\n@import '../node_modules/include-media/dist/include-media';\n\n@import \"00-base/base/_base.scss\";\n@import \"00-base/breakpoints/_breakpoints.scss\";\n@import \"00-base/colors/_colors.scss\";\n@import \"00-base/defaults/_mixins.scss\";\n@import \"00-base/layout/_layout.scss\";\n@import \"00-base/palettes-demo/palettes-demo.scss\";\n@import \"00-base/palettes/blue-gold.scss\";\n@import \"00-base/palettes/red-bone.scss\";\n@import \"00-base/spacing/_spacing.scss\";\n@import \"00-base/typography/_fonts.scss\";\n@import \"00-base/typography/_type-settings.scss\";\n@import \"00-base/typography/_typography.scss\";\n@import \"01-atoms/button/_button.scss\";\n@import \"01-atoms/images/_logo.scss\";\n@import \"01-atoms/link/_link.scss\";\n@import \"02-molecules/breadcrumb/_breadcrumb.scss\";\n@import \"02-molecules/menus/_menu.scss\";\n@import \"03-organisms/header/_header.scss\";\n@import \"04-templates/dashboard/_dashboard.scss\";\n@import \"04-templates/page/_page.scss\";\n","/*! Drupal visually-hidden CSS class that hides content from visual users and\n   shows content to screen reader users. */\n@mixin visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n  width: 0.063rem;\n  height: 0.063rem;\n  word-wrap: normal;\n}\n","@import '../defaults/mixins';\n\n// Base HTML elements.\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 100%;\n  // Used for smoother scrolling by back-top.\n  scroll-behavior: smooth;\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    scroll-behavior: initial;\n  }\n\n  // Disable horizontal scrolling.\n  overflow-x: hidden;\n}\n\nbody {\n  margin: 0;\n  color: var(--brand-text-color);\n  font-size: var(--font-size-base);\n  font-family: var(--font-display-face);\n  line-height: var(--line-height-base);\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  // background-color: clr(grayscale, 0);\n}\n\nul li,\nol li {\n  margin: 0;\n  line-height: var(--line-height-base);\n}\n\nul li {\n  list-style-type: square;\n\n  &::marker {\n    color: var(--accent-secondary);\n  }\n}\n\np {\n  margin-top: var(--v-space-4xs);\n  margin-bottom: var(--v-space-4xs);\n}\n\ndl,\ndt,\ndd {\n  margin: 0;\n}\n\naddress {\n  font-style: normal;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\na {\n  color: var(--brand-primary-dark);\n  text-decoration: underline solid 2px var(--brand-primary-dark);\n  transition: color 0.12s ease-in, text-decoration-color 0.12s ease-in;\n\n  &:hover {\n    text-decoration-color: var(--color-transparent);\n    transition: text-decoration-color 0.12s ease-in;\n  }\n\n  &:hover,\n  &:focus,\n  &:focus-visible,\n  &:active {\n    color: var(--brand-secondary-dark);\n  }\n\n  &:focus,\n  &:focus-visible,\n  &:active {\n    outline: var(--focus-color) solid 2px;\n    text-decoration-color: var(--color-transparent);\n  }\n\n  // Set link font on page only (skip admin toolbar).\n  .layout-container & {\n    font-family: var(--font-display-face);\n  }\n}\n\n.clipboard-item {\n  position: relative;\n}\n\n.visually-hidden {\n  @include visually-hidden;\n}\n","// Breakpoints.\n/*! See https://eduardoboucas.github.io/include-media/ for detailed\ndocumentation on how to use @include media(). */\n$breakpoints: (\n  'xs': 24rem, // 375px.\n  'sm': 30rem, // 480px.\n  'md': 48rem, // 768px.\n  'lg': 60rem, // 960px.\n  'xl': 80rem, // 1280px.\n  '2xl': 90rem // 1440px.\n);\n","// Main Colors.\nh2 {\n  color: var(--brand-primary);\n}\n\n:root {\n  // Core Colors.\n\n  // Overridden by Palette Switcher.\n  --brand-primary: #138aab;\n  --brand-primary-dark: #107996;\n  --brand-primary-accent: #159ec4;\n  --brand-secondary: #e6ab49;\n  --brand-secondary-dark: #9d6915;\n  --brand-secondary-accent: #f1b85a;\n  --mukurtu-navbar-collapse-link-hover-color: #e5ab48;\n  --mukurtu-breadcrumb-gradient-color: #b7873a;\n  --mukurtu-panel-pane-text-color: var(--color-white);\n  --mukurtu-panel-pane-content-background-color: #eeecec;\n  --mukurtu-mejs-background-color: var(--brand-light-accent);\n  --mukurtu-mejs-time-rail-loaded-color: #e5e1e1;\n  --mukurtu-mejs-time-rail-current-color: #d1cbcb;\n  --mukurtu-dictionary-word-label-background-color: var(--mukurtu-view-row-divider-color);\n  --mukurtu-collection-title-font-color: var(--color-white);\n  --mukurtu-collection-pane-bg-color: var(--mukurtu-navbar-collapse-bg);\n\n  // Persistent Across Palettes Below.\n  --brand-text-color: #464646;\n  --brand-light: #e5e9e9;\n  --brand-light-accent: #f8f7f7;\n\n  --link-color: var(--brand-primary-accent);\n  --text-color: var(--brand-text-color);\n  --light-text-color: var(--color-white);\n  --teaser-text-color: #333333;\n\n  // General colors.\n  --color-white: #ffffff;\n  --color-black: #000000;\n  --color-gray: #555555;\n  --color-transparent: rgba(0, 0, 0, 0);\n  --focus-color: #66afe9;\n  --placeholder-color: #999999;\n\n  // Footer.\n  --footer-text-color: #999999;\n  --footer-link-color: #cccccc;\n\n  // Nav.\n  --navbar-default-bg: var(--color-white);\n  --navbar-mukurtu-bg: var(--brand-primary);\n  --main-nav-divider: rgba(70, 70, 70, 0.25); // #464646 with 25% opacity.\n\n  // Views.\n  --mukurtu-view-row-divider-color: #eeeaea;\n  --mukurtu-primary-field-divider-color: #e5e1e1;\n\n  // Mobile Menu/Collapse Navbar.\n  --mukurtu-navbar-collapse-bg: var(--brand-light-accent);\n  --mukurtu-navbar-collapse-link-color: var(--brand-primary-accent);\n\n  // Mukurtu Specific.\n  --mukurtu-text-box-background-color: #eeecec;\n  --mukurtu-title-accent-bar-color: var(--brand-secondary);\n  --mukurtu-left-right-title-color: var(--color-white);\n  --mukurtu-dictionary-term-title-full-color: var(--color-white);\n\n  // Breadcrumbs.\n  --mukurtu-breadcrumb-background-color: var(--brand-secondary);\n  --mukurtu-breadcrumb-link-color: var(--color-white);\n  --mukurtu-breadcrumb-non-link-color: var(--text-color);\n\n  --mukurtu-default-container-bg-color: var(--brand-primary);\n  --mukurtu-default-container-bg-hover-color: var(--brand-primary-accent);\n  --mukurtu-default-container-font-color: var(--color-white);\n\n  // Mukurtu Menu Navbar links.\n  --mukurtu-navbar-default-link-color: var(--color-white);\n  --mukurtu-navbar-default-link-hover-color: var(--color-white);\n  --mukurtu-navbar-default-link-hover-bg: var(--brand-primary-accent);\n\n  --mukurtu-navbar-default-link-active-color: var(--color-gray);\n  --mukurtu-navbar-default-link-active-bg: darken(var(--navbar-default-bg), 6.5%);\n  --mukurtu-navbar-default-link-disabled-color: #cccccc;\n  --mukurtu-navbar-default-link-disabled-bg: transparent;\n\n  // Media Element Controls.\n  --mukurtu-mejs-text-color: var(--brand-text-color);\n\n  // Dictionary.\n  --mukurtu-dictionary-facets-pane-background-color: var(--brand-primary);\n  --mukurtu-dictionary-facets-pane-contrast-color: var(--brand-secondary);\n  --mukurtu-dictionary-term-title-color: var(--color-white);\n\n  // Collections.\n  /*!These values change based on the selected color palette - see these\n  at the top of the file. */\n\n  // Community.\n  --mukurtu-community-membership-status-color: var(--brand-primary);\n\n  // Browse By.\n  --mukurtu-browse-by-background-color: var(--brand-primary);\n  --mukurtu-browse-by-title-color: var(--brand-secondary);\n}\n\n/*! See palettes folder for the different color palettes.\nThose files are injected by Drupal so they shouldn't be bundled to style.css. */\n",":root {\n  // Horizontal spacing.\n  --gutter-s: var(--v-space-3xs); // 24px\n  --gutter-m: var(--v-space-2xs); // 32px\n  --gutter: var(--gutter-s); // Dynamic responsive value.\n\n  @include media('>=md') {\n    --gutter: var(--gutter-m);\n  }\n\n  // Dynamic layout external padding.\n  --layout-padding-xs: var(--v-space-3xs); // 24px\n  --layout-padding-s: var(--v-space-s); // 48px\n  --layout-padding-m: var(--v-space-xl); // 72px\n  --layout-padding-l: var(--v-space-2xl); // 80px\n  --layout-padding: var(--layout-padding-xs); // 24px (default)\n\n  @include media('>=md') {\n    --layout-padding: var(--layout-padding-s); // 48px\n  }\n\n  @include media('>=xl') {\n    --layout-padding: var(--layout-padding-m); // 72px\n  }\n\n  @include media('>=2xl') {\n    --layout-padding: 0;\n  }\n\n  // Basic reusable grid settings for grid-template-columns.\n  --grid-1col: repeat(1, minmax(0, 1fr));\n  --grid-2col: repeat(2, minmax(0, 1fr));\n  --grid-3col: repeat(3, minmax(0, 1fr));\n  --grid-4col: repeat(4, minmax(0, 1fr));\n  --grid-5col: repeat(5, minmax(0, 1fr));\n  --grid-6col: repeat(6, minmax(0, 1fr));\n  --grid-7col: repeat(7, minmax(0, 1fr));\n  --grid-8col: repeat(8, minmax(0, 1fr));\n  --grid-9col: repeat(9, minmax(0, 1fr));\n  --grid-10col: repeat(10, minmax(0, 1fr));\n  --grid-11col: repeat(11, minmax(0, 1fr));\n  --grid-12col: repeat(12, minmax(0, 1fr));\n  // Layout variables.\n  // 1280px maxwidth from the designs.\n  // 4.833rem calculation comes from:\n  // Gutter calculation: 11 (gutters) * 32px (max gutter width) = 352px\n  // Col maxwidth calculation: 352px - 1280px (maxwidth) = 928px\n  // Per col calculation: 928px (col maxwidth) / 12 (cols) = 77.33px (4.833rem)\n  --grid-12col-max-width: repeat(12, minmax(0, 4.833rem));\n}\n\n// This layout fully uses grid i.e. no margin: auto either side.\n// Useful if you need to have a background image or horizontal border running\n// the full width of the page.\n@mixin layout--full-width-grid {\n  display: grid;\n  grid-template-columns: var(--grid-6col);\n  padding-right: var(--layout-padding);\n  padding-left: var(--layout-padding);\n  column-gap: var(--gutter);\n\n  @include media('>=lg') {\n    grid-template-columns: var(--grid-12col);\n  }\n\n\n  @include media('>=2xl') {\n    grid-template-columns: minmax(0, auto) var(--grid-12col-max-width) minmax(0, auto);\n  }\n}\n\n// This layout fully uses grid i.e. no margin: no padding either size.\n// Useful if you need to have a background image or horizontal border running\n// the full width of the page with no padding.\n@mixin layout--full-width-grid-no-padding {\n  display: grid;\n  grid-template-columns: var(--grid-6col);\n  padding-left: 0;\n  padding-right: 0;\n  column-gap: var(--gutter);\n\n  @include media('>=lg') {\n    grid-template-columns: var(--grid-12col);\n  }\n\n  @include media('>=2xl') {\n    grid-template-columns: minmax(0, auto) var(--grid-12col-max-width) minmax(0, auto);\n  }\n}\n\n@mixin layout--full-width-grid-only2xl {\n  display: grid;\n  grid-template-columns: minmax(0, auto) var(--grid-12col-max-width) minmax(0, auto);\n  column-gap: var(--gutter);\n}\n\n@mixin layout--full-width-grid-item {\n  display: grid;\n  grid-column: 1 / -1;\n\n  @include media('>=2xl') {\n    grid-column: 2 / -2;\n  }\n}\n\n@mixin layout--twocol-grid {\n  display: grid;\n  grid-template-columns: var(--grid-2col);\n  grid-gap: 10px var(--gutter);\n}\n\n@mixin layout--threecol-grid {\n  display: grid;\n  grid-template-columns: var(--grid-3col);\n  grid-gap: 10px var(--gutter);\n}\n\n.layout--full-width-grid {\n  @include layout--full-width-grid;\n}\n\n.layout--full-width-grid-item {\n  @include layout--full-width-grid-item;\n}\n\n// Add top/bottom padding to each component block.\n.layout__region--content>.block {\n  padding-top: var(--v-separation);\n  padding-bottom: var(--v-separation);\n}\n","//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v2.0.0\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n@charset \"UTF-8\";\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:string';\n@use 'sass:meta';\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x':\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x':\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if meta.feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map.has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not list.index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if string.index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if string.length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $value: string.slice($expression, $operator-index + string.length($operator));\n\n  @if map.has-key($breakpoints, $value) {\n    $value: map.get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map.get($unit-intervals, math.unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{math.unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map.has-key($media-expressions, $expression) {\n    @return map.get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: list.length($list)) {\n  @if list.length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: list.append($result, list.nth($list, $i), comma);\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n\n@function to-number($value) {\n  @if meta.type-of($value) == 'number' {\n    @return $value;\n  } @else if meta.type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: string.slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: (\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: string.slice($value, 2);\n  }\n\n  @for $i from 1 through string.length($value) {\n    $character: string.slice($value, $i, $i);\n\n    @if not(list.index(map.keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), string.slice($value, $i));\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map.get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + math.div(map.get($numbers, $character), $digits);\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    'px': 1px,\n    'cm': 1cm,\n    'mm': 1mm,\n    '%': 1%,\n    'ch': 1ch,\n    'pc': 1pc,\n    'in': 1in,\n    'em': 1em,\n    'rem': 1rem,\n    'pt': 1pt,\n    'ex': 1ex,\n    'vw': 1vw,\n    'vh': 1vh,\n    'vmin': 1vmin,\n    'vmax': 1vmax,\n  );\n\n  @if not list.index(map.keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map.get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and list.length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and list.length($conditions) > 0) {\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","div.palette-demo {\n  position: relative;\n  display: flex;\n  padding: 8px;\n  height: 72px;\n  width: calc(72px * 3);\n\n  span {\n    position: relative;\n    flex: 1 1 0;\n    flex-direction: column;\n    display: flex;\n  }\n\n  .accent span {\n    position: relative;\n    flex: 1 1 0;\n    flex-direction: row;\n    width: calc(72px / 2);\n  }\n}\n\n$palettes: (\n  'blue-gold': ('brand-primary': #138aab,\n    'brand-secondary': #e6ab49,\n    'brand-primary-accent': #159ec4,\n    'brand-secondary-accent': #f1b85a,\n  ),\n  'red-bone': ('brand-primary': #ac143a,\n    'brand-secondary': #d9d4c2,\n    'brand-primary-accent': #9a1134,\n    'brand-secondary-accent': #c9c2a8,\n  ),\n);\n\n\n@mixin palette-demo {\n\n  @each $palette,\n  $values in $palettes {\n\n    .palette-demo--#{$palette} {\n      @each $key,\n      $value in $values {\n        .#{$key} {\n          background-color: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@include palette-demo;\n",":root {\n  // Overridden by Palette Switcher.\n  --brand-primary: #138aab;\n  --brand-primary-dark: #107996;\n  --brand-primary-accent: #159ec4;\n  --brand-secondary: #e6ab49;\n  --brand-secondary-dark: #9d6915;\n  --brand-secondary-accent: #f1b85a;\n  --mukurtu-navbar-collapse-link-hover-color: #e5ab48;\n  --mukurtu-breadcrumb-gradient-color: #b7873a;\n  --mukurtu-panel-pane-text-color: var(--color-white);\n  --mukurtu-panel-pane-content-background-color: #eeecec;\n  --mukurtu-mejs-background-color: var(--brand-light-accent);\n  --mukurtu-mejs-time-rail-loaded-color: #e5e1e1;\n  --mukurtu-mejs-time-rail-current-color: #d1cbcb;\n  --mukurtu-dictionary-word-label-background-color: var(--mukurtu-view-row-divider-color);\n  --mukurtu-collection-title-font-color: var(--color-white);\n  --mukurtu-collection-pane-bg-color: var(--mukurtu-navbar-collapse-bg);\n}\n",":root {\n  // Overridden by Palette Switcher.\n  --brand-primary:          #ac143a;\n  --brand-primary-dark: var(--brand-primary);\n  --brand-primary-accent: #9a1134;\n  --brand-secondary:        #d9d4c2;\n  --brand-secondary-dark: #7a734d;\n  --brand-secondary-accent: #c9c2a8;\n  --mukurtu-navbar-collapse-link-hover-color:       var(--brand-secondary);\n  --mukurtu-breadcrumb-gradient-color:              #99937f;\n  --mukurtu-panel-pane-text-color:                  var(--brand-primary);\n  --mukurtu-panel-pane-content-background-color:    #f1efe9;\n  --mukurtu-mejs-background-color:                  var(--mukurtu-navbar-collapse-bg);\n  --mukurtu-mejs-time-rail-loaded-color:            #ffffff;\n  --mukurtu-mejs-time-rail-current-color:           var(--brand-secondary-accent);\n  --mukurtu-dictionary-word-label-background-color: var(--brand-secondary);\n  --mukurtu-collection-title-font-color:            var(--text-color);\n  --mukurtu-collection-pane-bg-color:               var(--brand-light-accent);\n}\n",":root {\n  // Vertical spacing.\n  // All vertical horizontal spacing is based on an 16px base unit system.\n  --v-space-6xs: 0.25rem; // 4px\n  --v-space-5xs: 0.5rem; // 8px\n  --v-space-4xxs: 1rem; // 16px\n  --v-space-4xs: 1.25rem; // 20px\n  --v-space-3xs: 1.5rem; // 24px\n  --v-space-2xs: 2rem; // 32px\n  --v-space-xs: 2.5rem; // 40px\n  --v-space-s: 3rem; // 48px\n  --v-space-m: 3.5rem; // 56px\n  --v-space-l: 4rem; // 64px\n  --v-space-xl: 4.5rem; // 72px\n  --v-space-2xl: 5rem; // 80px\n  --v-space-3xl: 6rem; // 96px\n  --v-space-4xl: 6.5rem; // 104px\n  --v-space-5xl: 7.5rem; // 120px\n  --v-space-6xl: 8rem; // 128px\n\n  // Top / bottom padding between components.\n  --v-separation-s: var(--v-space-3xs); // 24px\n  --v-separation-m: var(--v-space-2xs); // 32px\n  --v-separation-l: var(--v-space-s); // 48px\n  --v-separation-xl: var(--v-space-l); // 64px\n  --v-separation-xxl: var(--v-space-6xl); // 64px\n  --v-separation: var(--v-separation-s); // Dynamic responsive value.\n\n  @include media('>=md') {\n    --v-separation: var(--v-separation-m);\n  }\n\n  @include media('>=lg') {\n    --v-separation: var(--v-separation-l);\n  }\n\n  @include media('>=xl') {\n    --v-separation: var(--v-separation-xl);\n  }\n}\n","@font-face {\n  font-family: 'BCSans';\n  font-style: normal;\n  src: url('assets/fonts/BCSans/BCSans-Regular.woff2') format('woff2'),\n  // Optimized for very modern browsers\n  url('assets/fonts/BCSans/BCSans-Regular.woff') format('woff');\n  // Modern Browsers\n}\n\n@font-face {\n  font-family: 'BCSans';\n  font-style: italic;\n  src: url('assets/fonts/BCSans/BCSans-Italic.woff2') format('woff2'),\n  // Optimized for very modern browsers\n  url('assets/fonts/BCSans/BCSans-Italic.woff') format('woff');\n  // Modern Browsers\n}\n\n@font-face {\n  font-family: 'BCSans';\n  font-weight: 700;\n  src: url('assets/fonts/BCSans/BCSans-Bold.woff2') format('woff2'),\n  // Optimized for very modern browsers\n  url('assets/fonts/BCSans/BCSans-Bold.woff') format('woff');\n  // Modern Browsers\n}\n\n@font-face {\n  font-family: 'BCSans';\n  font-style: italic;\n  font-weight: 700;\n  src: url('assets/fonts/BCSans/BCSans-BoldItalic.woff2') format('woff2'),\n  // Optimized for very modern browsers\n  url('assets/fonts/BCSans/BCSans-BoldItalic.woff') format('woff');\n  // Modern Browsers\n}\n",":root {\n  // Font sizes.\n  --font-size-2xs: 0.75rem; // 12px\n  --font-size-xs: 0.875rem; // 14px\n  --font-size-s: 1rem; // 16px\n  --font-size-m: 1.125rem; // 18px\n  --font-size-l: 1.25rem; // 20px\n  --font-size-2l: 1.375rem; // 22px\n  --font-size-xl: 1.5rem; // 24px\n  --font-size-2xl: 1.75rem; // 28px\n  --font-size-2xxl: 1.875rem; // 30px\n  --font-size-3xl: 2rem; // 32px\n  --font-size-heading-md: 2.25rem; // 36px\n  --font-size-heading-lg: 2.5rem; // 40px\n  --font-size-heading-xl: 3rem; // 48px\n  --font-size-heading-2xl: 3.5rem; // 56px\n  --font-size-heading-3xl: 4rem; // 64px\n  --font-size-heading-4xl: 4.5rem; // 72px\n  --font-size-heading-5xl: 7rem; // 112px\n\n  --font-size-base: var(--font-size-s);\n\n  // Font weight.\n  --headings-font-weight: 500;\n  --text-regular: 400;\n  --text-bold: 700;\n\n  // Line heights.\n  --line-height-3xs: 0.75rem; // 12px\n  --line-height-2xs: 1rem; // 16px\n  --line-height-xs: 1.5rem; // 24px\n  --line-height-s: var(--line-height-xs); // 24px\n  --line-height-m: 2rem; // 32px\n  --line-height-l: var(--line-height-m); // 32px\n  --line-height-xl: 2.5rem; // 40px\n  --line-height-2xl: 3rem; // 48px\n  --line-height-3xl: 3.5rem; // 56px\n  --line-height-heading: 1.1; // 1.1 x heading size\n  --line-height-heading-2xl: 4rem; // 64px\n  --line-height-heading-3xl: 4.5rem; // 72px\n  --line-height-heading-4xl: var(--line-height-heading-3xl); // 72px\n  --line-height-heading-5xl: 7rem; // 112px\n  --line-height-base: var(--line-height-l); // (default)\n\n  // Letter spacing.\n  --letter-spacing-xs: 0.01rem; // 0.16px\n  --letter-spacing-xl: 0.02rem; // 0.32px\n  --letter-spacing-negative-xll: -0.01rem; // -0.16px\n  --letter-spacing-negative-xxl: -0.02rem; // -0.32px\n  --letter-spacing-label: 0.1rem; // 1.6px\n}\n",":root {\n  // Typography.\n  // @todo: add a serif font if using one, or remove this if not.\n\n  /*! --font-body-face: Georgia,\n     \"Times New Roman\",\n     Times,\n     serif; */\n  --font-display-face: 'BCSans',\n  'Noto Sans',\n  Verdana,\n  Arial,\n  sans-serif;\n\n  --font-size-base: var(--font-size-small);\n}\n\n// Headings definition.\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\n.h1,\n.h2,\n.h3,\n.h4,\n.h5,\n.h6 {\n  font-family: var(--font-display-face);\n  font-weight: var(--headings-font-weight);\n  line-height: var(--line-height-heading);\n  color: var(--text-color);\n\n  a {\n    color: var(--brand-primary);\n  }\n}\n\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3 {\n  margin-top: var(--v-space-4xs);\n  margin-bottom: (var(--v-space-4xs) / 2);\n}\n\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6 {\n  margin-top: (var(--v-space-4xs) / 2);\n  margin-bottom: (var(--v-space-4xs) / 2);\n}\n\nh1,\n.h1 {\n  font-size: var(--font-size-heading-lg);\n}\n\nh2,\n.h2 {\n  font-size: var(--font-size-heading-md);\n}\n\nh3,\n.h3 {\n  font-size: var(--font-size-3xl);\n}\n\nh4,\n.h4 {\n  font-size: var(--font-size-2xl);\n}\n\nh5,\n.h5 {\n  font-size: var(--font-size-xl);\n}\n\nh6,\n.h6 {\n  font-size: var(--font-size-l);\n}\n","// Defaults.\nbutton,\ninput[type=button],\ninput[type=submit],\ninput[type=reset] {\n  color: var(--light-text-color);\n  background: var(--brand-primary);\n  border: none;\n  padding: var(--v-space-4xs) var(--v-space-2xs);\n\n  &:hover,\n  &:active {\n    color: var(--light-text-color);\n    background: var(--brand-primary-accent);\n  }\n\n  &:focus {\n    outline: 2px solid var(--color-focus);\n  }\n\n  &:disabled {\n    color: var(--light-text-color);\n    background: var(--brand-text-color);\n  }\n}\n",".page__logo {\n  a {\n    display: flex;\n  }\n}\n",".breadcrumb {\n  &__list-wrapper {\n    display: flex;\n    column-gap: var(--v-space-5xs);\n\n    li:nth-child(even) {\n      font-size: var(--font-size-2xs);\n    }\n  }\n}\n","// All menu styling is here.\n// To find menu grid placement, see _page.scss.\n.menu {\n  // Account menu.\n  &__account-menu {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: var(--gutter);\n    width: 100%;\n\n    li {\n      list-style: none;\n\n      a {\n        color: var(--light-text-color);\n        font-weight: var(--text-bold);\n        text-decoration: underline solid 2px var(--light-text-color);\n        transition: color 0.12s ease-in, text-decoration-color 0.12s ease-in;\n\n        &:hover {\n          text-decoration-color: var(--color-transparent);\n          transition: text-decoration-color 0.12s ease-in;\n        }\n\n        &:hover,\n        &:focus,\n        &:focus-visible,\n        &:active {\n          color: var(--brand-light-accent);\n        }\n\n        &:focus,\n        &:focus-visible,\n        &:active {\n          outline-color: var(--color-white);\n        }\n      }\n    }\n  }\n}\n\n// @todo: nest this under the menu class above once the main menu\n// template has been made.\n.page__main-nav {\n  ul {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    width: 100%;\n\n    li {\n      list-style: none;\n      position: relative;\n\n      &:not(:first-of-type) {\n        padding-inline-start: var(--v-space-4xxs);\n      }\n\n      &:not(:last-of-type) {\n        padding-inline-end: var(--v-space-4xxs);\n        border-right: 1.5px solid var(--main-nav-divider);\n      }\n\n      a {\n        color: var(--brand-text-color);\n        font-size: var(--font-size-l);\n        text-decoration: underline solid 2px var(--color-transparent);\n        transition: color 0.12s ease-in, text-decoration-color 0.12s ease-in;\n\n        &:hover {\n          text-decoration-color: var(--brand-secondary-dark);\n          text-underline-offset: 8px;\n          transition: text-decoration-color 0.12s ease-in;\n        }\n\n        &:hover,\n        &:focus,\n        &:focus-visible,\n        &:active {\n          color: var(--brand-secondary-dark);\n        }\n      }\n    }\n  }\n}\n","// All header styling is here.\n// To find header grid placement, see _page.scss.\nheader {\n  align-items: center;\n  padding-block: var(--v-space-4xxs);\n}\n",".dashboard {\n  //  Set up grid-like layout for Dashboard.\n  display: flex;\n  gap: var(--gutter);\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n\n  grid-column: 1 / -1;\n\n  @include media('>=2xl') {\n    grid-column: 2 / -2;\n  }\n\n  // Add elements to grid.\n  &__layout-sidebar-first,\n  &__menu,\n  &__main-content {\n    display: flex;\n    flex-direction: column;\n    flex-basis: 100%;\n    flex: 1;\n    padding: var(--v-space-4xs);\n    border: 1px solid var(--mukurtu-primary-field-divider-color);\n  }\n}\n",".layout-container {\n\n  header {\n    @include layout--full-width-grid;\n\n    .page {\n      &__banner__wrapper {\n        display: flex;\n        align-items: center;\n        column-gap: var(--gutter);\n        flex-direction: row;\n        flex-wrap: wrap;\n        width: 100%;\n\n        grid-column: 1 / -1;\n\n        @include media('>=2xl') {\n          grid-column: 2 / -2;\n        }\n      }\n\n      &__logo {\n        flex-shrink: 0;\n      }\n\n      &__main-nav {\n        flex-grow: 1;\n      }\n    }\n  }\n\n  main {\n    @include layout--full-width-grid;\n    margin-block-end: var(--v-separation);\n\n    div:first-of-type {\n      grid-column: 1 / -1;\n\n      @include media('>=2xl') {\n        grid-column: 2 / -2;\n      }\n    }\n  }\n\n  .page {\n    &__account-menu {\n      @include layout--full-width-grid;\n\n      // Style this here for full bleed of color.\n      background-color: var(--brand-primary-dark);\n\n      div:first-of-type {\n        grid-column: 1 / -1;\n\n        @include media('>=2xl') {\n          grid-column: 2 / -2;\n        }\n      }\n    }\n\n    &__breadcrumbs {\n      // Style this here for full bleed of color.\n      background: linear-gradient(180deg, var(--mukurtu-breadcrumb-gradient-color) 0%, var(--brand-secondary) 20%);\n\n      @include layout--full-width-grid;\n\n      div:first-of-type {\n        grid-column: 1 / -1;\n\n        @include media('>=2xl') {\n          grid-column: 2 / -2;\n        }\n      }\n\n      ol {\n        padding: 0;\n\n        li {\n          list-style-type: none;\n        }\n      }\n\n      a {\n        color: var(--brand-text-color);\n        text-decoration: underline solid 2px var(--brand-text-color);\n        transition: color 0.12s ease-in, text-decoration-color 0.12s ease-in;\n\n        &:hover {\n          text-decoration-color: var(--color-transparent);\n          transition: text-decoration-color 0.12s ease-in;\n        }\n      }\n    }\n\n    &__title {\n      grid-column: 1 / -1;\n      text-align: center;\n      padding-block: var(--v-space-2xs);\n      background: linear-gradient(var(--brand-light), var(--color-white));\n      background-repeat: no-repeat;\n      background-size: 100% 12px;\n      background-position: bottom;\n      margin-block-end: var(--v-separation);\n\n      h1 {\n        margin-block: 0;\n      }\n    }\n  }\n}\n"]}

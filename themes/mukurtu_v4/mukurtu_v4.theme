<?php

use Drupal\file\Entity\File;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_breadcrumb().
 */
// @todo: adjust this so that it works on admin pages
function mukurtu_v4_preprocess_breadcrumb(&$variables) {
  $request = \Drupal::request();
  $route = \Drupal::routeMatch()->getRouteObject();
  $page_title = \Drupal::service('title_resolver')->getTitle($request, $route);

  // @todo: add admin pages in here too
  if ($page_title) {
    // Add current page title to breadcrumbs.
    $variables['breadcrumb'][] = array(
      'text' => $page_title
    );

    $variables['#cache']['contexts'][] = 'url';
  }
}

/**
 * Implements hook_preprocess_node().
 */
function mukurtu_v4_preprocess_node(&$variables) {
  $node = $variables['node'];

  if ($node instanceof \Drupal\mukurtu_collection\Entity\Collection) {
    $variables['collection_count'] = $node->getCount();
  }

  /** This creates a twig variable that can be used in node templates to 
   * render the media assets field (a second time) with thumbnail display. 
   */

  if ($node->hasField('field_media_assets')) {
    if (!$node->field_media_assets->isEmpty()) {
      $variables['thumbnail_display'] = $node->field_media_assets->view([
        'type' => 'entity_reference_entity_view',
        'label' => 'hidden',
        'settings' => [
          'view_mode' => 'carousel_thumbnail',
        ],
      ]);
    }
  }
}

/**
 * Implements hook_theme_suggestions_input_alter().
 */
function mukurtu_v4_theme_suggestions_input_alter(&$suggestions, array $variables) {
  $element = $variables['element'];
  if ($element['#type'] == 'submit' && strpos($element['#id'], 'edit-submit-mukurtu-browse-collections--2') === 0) {
    $suggestions[] = 'input__collection__search';
  }
}

/**
 * Implements template_preprocess_block().
 */
function mukurtu_v4_preprocess_block(&$variables) {
  // Directs the theme to use the block template for the Mukurtu footer,
  // mukurtu-footer.html.twig. Otherwise, it would use the default template,
  // block.html.twig, and our footer would not display.
  $variables['plugin_id'] = 'mukurtu_footer';
}

/**
 * Implements template_preprocess_media().
 */
function mukurtu_v4_preprocess_media(array &$variables) {
  $media = $variables['media'];
 
  $variables['bundle'] = $media->bundle();

  $fid = $media->getSource()->getSourceFieldValue($media);

  $file = File::load($fid);

  if (!empty($file)) {
    $url = $file->createFileUrl();
    $variables['media_url'] = $url;
  }
}

/**
 * Implements template_preprocess_paragraph().
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - paragraph: The paragraph object.
 *   - view_mode: View mode; e.g., 'full', 'teaser'...
 */

 function mukurtu_v4_preprocess_paragraph(&$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  // Get the parent bundle.
  // $parentBundle = $paragraph->getParentEntity()->bundle();

  // dump($variables);
  $paragraph = $variables['content'];
  // $translation = $paragraph->field_translation;
  // dump($translation);

  // !$product_entity->field_status->isEmpty()
  // if (!$paragraph->field_translation->isEmpty()) {
  //   $variables['translation'] = $paragraph->field_translation;
  // }


  // if ($paragraph->hasField('field_translation')) {
  //   if (!$paragraph->field_translation->isEmpty()) {
  //     $variables['translation'] = $paragraph->field_translation;
  //   }
  // }
}